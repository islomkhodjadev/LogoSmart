openapi: 3.0.3
info:
  title: LOGO SMART
  version: 0.0.0
paths:

  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /v1/api/parent/registerbyphone/:
    get:
      operationId: v1_api_parent_registerbyphone_retrieve
      description: |-
        * This method only used to resend OTP verification.
        :param request:

        :param phoneNumber:
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: v1_api_parent_registerbyphone_create
      description: |-
        This method is implemented to perform creation of the user
        via phone Number

        :param request:
        * if user is being created the first time then in the request post method the "first" data
        should be passed, and phoneNumber. it will create a user with username - phoneNumber and random password
        * To activate the user it will send OTP verification.  And by requesting again with phoneNumber and Code
        you will be able to activate user.
        * To continue registration and to provide username and password it should be sent by post request
        username, password, phoneNumber the previous one.

        :param phoneNumber:
        * everytime it should be valid uzbek number with +999 .. ... .. ..

        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/api/parent/registerbyphone/{phoneNumber}/:
  /v1/api/parent/authenticate/:
    post:
      operationId: v1_api_parent_authenticate_create
      description: |-
        * This method is used to create and send the Token to the user

        :param request:
         - In request data The login and Password should be sent
        :param args:
        :param kwargs:
        :return:
      tags:
      - v1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /v1/api/parent/createparent/:
    post:
      operationId: v1_api_parent_createparent_create
      description: |-
        * This will create the parent

        :param request:
        * In request there should be sent
        name, city, region, age
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: v1_api_parent_createparent_update
      description: |-
        * This method is used to change all credentials of parent at once

        :param request:
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: v1_api_parent_createparent_partial_update
      description: |-
        * This method is to perform partial change in parent

        :param request:
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  
  /v1/api/parent/children/:
    post:
      operationId: v1_api_parent_children_create
      description: |-
        * This method is to create Child

        :param request:
          - In request data 'id', 'gender', 'name', 'age', 'image' should be sent
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: v1_api_parent_children_update
      description: |-
        * This method is to perform full update
        :param request:
        :param pk:
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: v1_api_parent_children_partial_update
      description: |-
        * This method is to perform partial update in child
        :param request:
        :param pk:
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /v1/api/parent/children/{id}/:
    post:
      operationId: v1_api_parent_children_create_2
      description: |-
        * This method is to create Child

        :param request:
          - In request data 'id', 'gender', 'name', 'age', 'image' should be sent
        :return:
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: v1_api_parent_children_update_2
      description: |-
        * This method is to perform full update
        :param request:
        :param pk:
        :return:
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: v1_api_parent_children_partial_update_2
      description: |-
        * This method is to perform partial update in child
        :param request:
        :param pk:
        :return:
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /v1/api/parent/children/level/:
    get:
      operationId: v1_api_parent_children_level_retrieve
      description: |-
        This method is to return the child all levels
        :param request:
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: v1_api_parent_children_level_create
      description: |2-
            * This method is to create the new levels which child is participated.
        :param request:
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: v1_api_parent_children_level_partial_update
      description: |-
        * This method is used to update the ChildLevel

        :param request:
        :return:
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /v1/api/parent/cities/:
    get:
      operationId: v1_api_parent_cities_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/api/parent/levels/:
    get:
      operationId: v1_api_parent_levels_list
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingMainCategory'
          description: ''
    post:
      operationId: v1_api_parent_levels_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingMainCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrainingMainCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrainingMainCategory'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingMainCategory'
          description: ''
    put:
      operationId: v1_api_parent_levels_update
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingMainCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrainingMainCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrainingMainCategory'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingMainCategory'
          description: ''
    delete:
      operationId: v1_api_parent_levels_destroy
      tags:
      - v1
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body

    get:
      operationId: v1_api_parent_registerbyphone_retrieve_2
      description: |-
        * This method only used to resend OTP verification.
        :param request:

        :param phoneNumber:
        :return:
      parameters:
      - in: path
        name: phoneNumber
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: v1_api_parent_registerbyphone_create_2
      description: |-
        This method is implemented to perform creation of the user
        via phone Number

        :param request:
        * if user is being created the first time then in the request post method the "first" data
        should be passed, and phoneNumber. it will create a user with username - phoneNumber and random password
        * To activate the user it will send OTP verification.  And by requesting again with phoneNumber and Code
        you will be able to activate user.
        * To continue registration and to provide username and password it should be sent by post request
        username, password, phoneNumber the previous one.

        :param phoneNumber:
        * everytime it should be valid uzbek number with +999 .. ... .. ..

        :return:
      parameters:
      - in: path
        name: phoneNumber
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/api/parent/videolesson/:
    get:
      operationId: v1_api_parent_videolesson_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Level:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
        text:
          type: string
          maxLength: 100
        voice:
          type: string
          format: uri
          maxLength: 500
        images:
          type: array
          items:
            type: integer
      required:
      - category
      - id
      - images
      - text
      - voice
    TrainingMainCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        age_min:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        age_max:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        level:
          type: array
          items:
            $ref: '#/components/schemas/Level'
          readOnly: true
      required:
      - age_max
      - age_min
      - id
      - level
      - name
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
